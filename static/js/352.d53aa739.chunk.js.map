{"version":3,"file":"static/js/352.d53aa739.chunk.js","mappings":"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","sources":["Firebase/firebaseConfig.js","features/flashCards/FlashCardDescriptionCards.jsx","features/flashCards/FlashCardsPrint.jsx","utils/fetchMultipleData.js","features/flashCards/flashCardsSlice.js","utils/utils.js","utils/copyTextToClipboard.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const dataBase = getFirestore(app);\nexport const storage = getStorage(app);\n","import React, { useRef } from 'react';\n\nimport { useDeleteFlashCardMutation, useGetFlashCardsQuery } from './flashCardsSlice';\nimport { AutoTextSize } from 'auto-text-size';\n\nimport { copyTextToClipboard } from '../../utils/copyTextToClipboard';\nimport FlashCardsPrint from './FlashCardsPrint';\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\nimport { Link } from 'react-router-dom';\nimport { LuBookMarked } from 'react-icons/lu';\nimport { LiaGoogle } from 'react-icons/lia';\n\nconst FlashCardDescriptionCards = () => {\n    const componentRef = useRef();\n    const { data: flashCards, isSuccess, isError, error } = useGetFlashCardsQuery();\n    const [deleteFlashCard, { isLoading, isSuccess: deleted }] = useDeleteFlashCardMutation();\n\n    const deleteFlashCardHandler = async id => {\n        try {\n            await deleteFlashCard(id).unwrap();\n        } catch (error) {\n            console.log(`Failed to delete the card: `, error);\n        }\n    };\n\n    let content;\n    if (isSuccess) {\n        content = flashCards?.map(card => (\n            <li\n                key={card?.id}\n                className=\"relative flex items-center w-full h-64 p-2 overflow-hidden border-4 rounded-lg bg-blue-300/10 group\"\n            >\n                <img\n                    loading=\"lazy\"\n                    className=\"w-48 h-48 rounded-lg m-2 border-[0.35rem] border-gray-500/10 object-cover shadow-xl\"\n                    src={card?.picture}\n                    alt={card?.word}\n                />\n                <div className=\"flex flex-col h-48 gap-1\">\n                    <div className=\"flex items-center gap-4\">\n                        <div>\n                            <AutoTextSize\n                                title=\"Click to copy.\"\n                                onClick={() => copyTextToClipboard(card?.word)}\n                                minFontSizePx=\"20\"\n                                maxFontSizePx=\"30\"\n                                className=\"font-semibold text-gray-700 cursor-pointer\"\n                                mode=\"multiple\"\n                            >\n                                {card?.word}\n                            </AutoTextSize>\n                        </div>\n\n                        <div>\n                            <AutoTextSize\n                                minFontSizePx=\"12\"\n                                maxFontSizePx=\"16\"\n                                className=\"text-gray-700 \"\n                            >\n                                {card?.phonetic}\n                            </AutoTextSize>\n                        </div>\n                    </div>\n                    <div className=\"h-1 -mt-1 rounded-md bg-gradient-to-r from-gray-700 to-white w-96\"></div>\n                    {card?.audio && (\n                        <audio controls className=\"h-6\">\n                            <source src={card?.audio} />\n                        </audio>\n                    )}\n                    <p className=\"italic font-semibold underline\">{card?.partOfSpeech}</p>\n                    <div>\n                        <AutoTextSize className=\"text-gray-700\" mode=\"multiple\">\n                            {card?.definition}\n                        </AutoTextSize>\n                    </div>\n                    {/* <p className=\"overflow-hidden text-lg text-ellipsis\">{card?.definition}</p> */}\n                </div>\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        deleteFlashCardHandler(card?.id);\n                    }}\n                    className=\"absolute flex items-center justify-center w-8 h-8 transition bg-blue-200 rounded-full opacity-0 top-2 right-2 group-hover:opacity-100 hover:scale-125 active:scale-95\"\n                >\n                    <AiOutlineDelete color=\"white\" />\n                </button>\n                <Link\n                    className=\"absolute flex items-center justify-center w-8 h-8 transition bg-blue-200 rounded-full opacity-0 top-2 right-12 group-hover:opacity-100 hover:scale-125 active:scale-95\"\n                    to={`/flashCards/edit/${card?.id}`}\n                >\n                    <AiOutlineEdit color=\"white\" />\n                </Link>\n                <a\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                    href={`https://dictionary.cambridge.org/dictionary/english/${card.word}`}\n                    className=\"absolute flex items-center justify-center w-8 h-8 transition bg-blue-200 rounded-full opacity-0 cursor-pointer top-2 right-24 group-hover:opacity-100 hover:scale-125 active:scale-95\"\n                >\n                    <LuBookMarked color=\"white\" />\n                </a>\n                <a\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                    href={`https://www.google.com.ua/search?q=${card.word}`}\n                    className=\"absolute flex items-center justify-center w-8 h-8 transition bg-blue-200 rounded-full opacity-0 cursor-pointer top-2 right-[135px] group-hover:opacity-100 hover:scale-125 active:scale-95\"\n                >\n                    <LiaGoogle size=\"20px\" color=\"white\" />\n                </a>\n            </li>\n        ));\n    } else if (isError) {\n        content = <p>{error}</p>;\n    }\n\n    return (\n        <div>\n            <ul ref={componentRef} className=\"grid gap-4 xl:grid-cols-2 place-items-center\">\n                {content}\n            </ul>\n            <FlashCardsPrint flashCardsData={flashCards} componentRef={componentRef} />\n        </div>\n    );\n};\n\nexport default FlashCardDescriptionCards;\n","import { BiSave } from 'react-icons/bi';\nimport ReactToPrint from 'react-to-print';\n\nconst FlashCardsPrint = ({ flashCardsData, componentRef }) => {\n    return (\n        <ReactToPrint\n            trigger={() =>\n                flashCardsData?.length !== 0 && flashCardsData !== undefined ? (\n                    <div className=\"sticky flex items-center justify-center w-40 mx-auto mt-10 bottom-5\">\n                        <button className=\"flex px-4 py-2 text-sm font-medium text-gray-800 bg-gray-200 rounded-md hover:bg-gray-300\">\n                            <BiSave size=\"20px\" className=\"mr-2\" />\n                            <p className=\"font-semibold\">Save as PDF</p>\n                        </button>\n                    </div>\n                ) : (\n                    <></>\n                )\n            }\n            content={() => componentRef.current}\n        />\n    );\n};\n\nexport default FlashCardsPrint;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst translateText = async (text, toLanguage = 'en') => {\n    const translationOptions = {\n        method: 'POST',\n        url: 'https://microsoft-translator-text.p.rapidapi.com/translate',\n        params: {\n            'to[0]': toLanguage,\n            'api-version': '3.0',\n        },\n        headers: {\n            'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\n        },\n        data: [\n            {\n                Text: text,\n            },\n        ],\n    };\n\n    try {\n        const response = await axios(translationOptions);\n\n        return response?.data[0]?.translations[0]?.text.toLowerCase();\n    } catch (error) {\n        console.error('translateText', error);\n        return null;\n    }\n};\n\nconst getDetails = async text => {\n    let detailedData = {\n        phonetic: '',\n        audio: '',\n        partOfSpeech: '',\n        definition: '',\n    };\n\n    const validate = /\\s/g.test(text);\n\n    if (validate) {\n        return detailedData;\n    }\n\n    try {\n        const response = await axios(`https://api.dictionaryapi.dev/api/v2/entries/en/${text}`);\n\n        detailedData = {\n            phonetic:\n                response?.data.find(item => item.phonetic !== undefined)?.phonetic ?? `/${text}/`,\n            audio: response?.data[0].phonetics.find(item => item.audio !== '')?.audio ?? '',\n            partOfSpeech: response?.data[0].meanings[0]?.partOfSpeech ?? '',\n            definition: response?.data[0].meanings[0]?.definitions[0].definition ?? '',\n        };\n\n        return detailedData;\n    } catch (error) {\n        console.log('getDetails', error);\n        return detailedData;\n    }\n};\n\nconst fetchUnsplashPhoto = async searchQuery => {\n    try {\n        const response = await axios(\n            `${process.env.REACT_APP_UNSPLASH_BASE_URL}/search/photos?page=1&per_page=1&orientation=landscape&query=${searchQuery}&client_id=${process.env.REACT_APP_UNSPLASH_KEY_ID}`\n        );\n        return response?.data?.results[0]?.urls?.regular || 'https://i.ibb.co/2NVKDq2/1.png';\n    } catch (error) {\n        console.error('fetchUnsplashPhoto', error);\n        return 'https://i.ibb.co/2NVKDq2/1.png';\n    }\n};\n\nexport const fetchMultipleData = async (searchQuery, translateTo) => {\n    try {\n        const translation = await translateText(searchQuery, translateTo);\n\n        if (translation === searchQuery) {\n            toast.info(\n                'There is something wrong  in your text, it may be a typo or native and target languages are the same! 🏳'\n            );\n\n            return null;\n        }\n\n        const getPictureInEng = await translateText(searchQuery);\n        const unsplashPhoto = await fetchUnsplashPhoto(getPictureInEng);\n        const { phonetic, audio, partOfSpeech, definition } = await getDetails(getPictureInEng);\n\n        const response = {\n            word: searchQuery,\n            translation,\n            phonetic,\n            audio,\n            partOfSpeech,\n            definition,\n            picture: unsplashPhoto,\n        };\n\n        return response;\n    } catch (error) {\n        console.error('fetchMultipleData', error);\n    }\n};\n","import { apiSlice } from '../api/apiSlice';\nimport { collection, deleteDoc, doc, getDoc, getDocs, setDoc, updateDoc } from 'firebase/firestore';\nimport { fetchMultipleData } from '../../utils/fetchMultipleData';\n\nimport { dataBase } from '../../Firebase/firebaseConfig';\n\nexport const extendedApiSlice = apiSlice.injectEndpoints({\n    endpoints: builder => ({\n        getFlashCards: builder.query({\n            queryFn: async () => {\n                try {\n                    const querySnapshot = await getDocs(collection(dataBase, 'flashCards'));\n                    const data = querySnapshot.docs.map(doc => ({\n                        id: doc.id,\n                        ...doc.data(),\n                    }));\n                    return { data };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            providesTags: ['FlashCards'],\n        }),\n\n        getSingleFlashCard: builder.query({\n            queryFn: async flashCardId => {\n                try {\n                    const docRef = doc(dataBase, 'flashCards', flashCardId);\n                    const snapshot = await getDoc(docRef);\n                    return { data: snapshot.data() };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            providesTags: ['FlashCards'],\n        }),\n\n        clearFlashCards: builder.mutation({\n            queryFn: async () => {\n                try {\n                    const docs = await getDocs(collection(dataBase, 'flashCards'));\n                    const deletePromises = docs.docs.map(doc => deleteDoc(doc.ref));\n\n                    await Promise.all(deletePromises);\n\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCards'],\n        }),\n\n        addFlashCard: builder.mutation({\n            queryFn: async ({ trimmedWord, language }) => {\n                try {\n                    const result = await fetchMultipleData(trimmedWord, language);\n\n                    if (!result) {\n                        return { data: 'ok' };\n                    }\n\n                    const docRef = doc(collection(dataBase, 'flashCards'), Date.now().toString());\n                    await setDoc(docRef, {\n                        ...result,\n                    });\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCards'],\n        }),\n\n        deleteFlashCard: builder.mutation({\n            queryFn: async id => {\n                try {\n                    await deleteDoc(doc(dataBase, 'flashCards', id));\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCards'],\n        }),\n\n        updateFlashCard: builder.mutation({\n            queryFn: async ({ flashCardId, newData }) => {\n                try {\n                    await updateDoc(doc(dataBase, 'flashCards', flashCardId), {\n                        ...newData,\n                    });\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCards'],\n        }),\n    }),\n});\n\nexport const {\n    useGetFlashCardsQuery,\n    useGetSingleFlashCardQuery,\n    useClearFlashCardsMutation,\n    useAddFlashCardMutation,\n    useDeleteFlashCardMutation,\n    useUpdateFlashCardMutation,\n} = extendedApiSlice;\n","export const toastInitialSettings = {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n};\n","import { toast } from 'react-toastify';\nimport { toastInitialSettings } from './utils';\n\nexport const copyTextToClipboard = async text => {\n    toast.success('The word is copied!', toastInitialSettings);\n    if ('clipboard' in navigator) {\n        return await navigator.clipboard.writeText(text);\n    } else {\n        return document.execCommand('copy', true, text);\n    }\n};\n"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","dataBase","getFirestore","getStorage","FlashCardDescriptionCards","componentRef","useRef","data","flashCards","isSuccess","isError","error","useGetFlashCardsQuery","deleteFlashCard","isLoading","deleted","useDeleteFlashCardMutation","content","map","card","_jsxs","className","children","_jsx","loading","src","picture","alt","word","AutoTextSize","title","onClick","copyTextToClipboard","minFontSizePx","maxFontSizePx","mode","phonetic","audio","controls","partOfSpeech","definition","type","async","id","unwrap","console","log","deleteFlashCardHandler","AiOutlineDelete","color","Link","to","concat","AiOutlineEdit","rel","target","href","LuBookMarked","LiaGoogle","size","ref","FlashCardsPrint","flashCardsData","_ref","ReactToPrint","trigger","length","undefined","BiSave","_Fragment","current","translateText","text","translationOptions","method","url","params","arguments","headers","Text","_response$data$","_response$data$$trans","response","axios","translations","toLowerCase","fetchMultipleData","searchQuery","translateTo","translation","toast","info","getPictureInEng","unsplashPhoto","_response$data","_response$data$result","_response$data$result2","results","urls","regular","fetchUnsplashPhoto","detailedData","test","_response$data$find$p","_response$data$find","_response$data$0$phon","_response$data$0$phon2","_response$data$0$mean","_response$data$0$mean2","_response$data$0$mean3","_response$data$0$mean4","find","item","phonetics","meanings","definitions","getDetails","extendedApiSlice","apiSlice","injectEndpoints","endpoints","builder","getFlashCards","query","queryFn","querySnapshot","getDocs","collection","docs","doc","providesTags","getSingleFlashCard","docRef","flashCardId","getDoc","clearFlashCards","mutation","deletePromises","deleteDoc","Promise","all","invalidatesTags","addFlashCard","trimmedWord","language","result","Date","now","toString","setDoc","updateFlashCard","newData","_ref2","updateDoc","useGetSingleFlashCardQuery","useClearFlashCardsMutation","useAddFlashCardMutation","useUpdateFlashCardMutation","toastInitialSettings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","theme","success","navigator","clipboard","writeText","document","execCommand"],"sourceRoot":""}