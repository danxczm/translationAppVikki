{"version":3,"file":"static/js/445.1cec7b17.chunk.js","mappings":"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","sources":["Firebase/firebaseConfig.js","features/flashCards/FlashCardExcerpt.jsx","features/flashCards/FlashCardsListOptions.jsx","features/flashCards/FlashCardsList.jsx","features/flashCards/FlashCardAddForm.jsx","features/flashCards/FlashCards.jsx","features/flashCards/FlashCardsPrint.jsx","utils/fetchMultipleData.js","features/flashCards/flashCardsSlice.js","features/flashCardsCollection/flashCardsCollectionSlice.js","utils/utils.js","utils/copyTextToClipboard.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const dataBase = getFirestore(app);\nexport const storage = getStorage(app);\n","import { Link } from 'react-router-dom';\nimport { AutoTextSize } from 'auto-text-size';\nimport { Rings } from 'react-loader-spinner';\n\nimport { LuBookMarked } from 'react-icons/lu';\nimport { AiOutlineDelete, AiOutlineEdit } from 'react-icons/ai';\nimport { LiaGoogle } from 'react-icons/lia';\n\nimport { useDeleteFlashCardMutation } from './flashCardsSlice';\nimport { copyTextToClipboard } from '../../utils/copyTextToClipboard';\n\nconst FlashCardExcerpt = ({ card }) => {\n    const [deleteFlashCard, { isLoading, isSuccess }] = useDeleteFlashCardMutation();\n\n    const deleteFlashCardHandler = async id => {\n        try {\n            await deleteFlashCard(id).unwrap();\n        } catch (error) {\n            console.log(`Failed to delete the card: `, error);\n        }\n    };\n\n    return (\n        <li\n            key={card?.id}\n            className=\"relative overflow-hidden transition duration-200 rounded-lg group hover:shadow-xl hover:shadow-blue-600\"\n        >\n            {(isLoading || isSuccess) && (\n                <div className=\"absolute z-10 transform -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2\">\n                    <Rings\n                        visible={true}\n                        height=\"240\"\n                        width=\"240\"\n                        color=\"white\"\n                        ariaLabel=\"rings-loading\"\n                    />\n                </div>\n            )}\n            <div className={`${(isLoading || isSuccess) && 'blur-sm'}`}>\n                <img\n                    loading=\"lazy\"\n                    className=\"relative object-cover w-full transition duration-200 rounded aspect-square group-hover:scale-110 \"\n                    src={card?.picture}\n                    alt={card?.word}\n                />\n                {/* delete button */}\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        deleteFlashCardHandler(card?.id);\n                    }}\n                    className=\"absolute flex items-center justify-center w-5 h-5 transition-opacity bg-white rounded-md opacity-0 top-2 right-2 group-hover:opacity-100\"\n                >\n                    <AiOutlineDelete />\n                </button>\n\n                {/* edit button */}\n                <Link\n                    className=\"absolute flex items-center justify-center w-5 h-5 transition-opacity bg-white rounded-md opacity-0 top-2 left-2 group-hover:opacity-100\"\n                    to={`edit/${card.id}`}\n                >\n                    <AiOutlineEdit />\n                </Link>\n                <div className=\"absolute bottom-0 w-full px-4 py-3 bg-gray-500/50 h-36\">\n                    <div className=\"relative flex\">\n                        <div onClick={() => copyTextToClipboard(card?.word)}>\n                            <AutoTextSize\n                                className=\"p-1 text-2xl font-semibold text-white cursor-pointer bg-gradient-to-r from-teal-400/50 to-blue-500/20\"\n                                title=\"Click to copy.\"\n                                mode=\"box\"\n                                minFontSizePx=\"24\"\n                                maxFontSizePx=\"24\"\n                            >\n                                {card?.word}\n                            </AutoTextSize>\n                        </div>\n                        <a\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                            href={`https://dictionary.cambridge.org/dictionary/english/${card.word}`}\n                            className=\"absolute right-0 flex items-center justify-center p-1 transition-opacity rounded-md opacity-0 cursor-pointer group-hover:opacity-100 top-8 hover:bg-blue-300\"\n                        >\n                            <LuBookMarked size=\"20px\" color=\"white\" />\n                        </a>\n                        <a\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                            href={`https://www.google.com.ua/search?q=${card.word}`}\n                            className=\"cursor-pointer opacity-0 group-hover:opacity-100 transition-opacity p-1 rounded-md flex items-center justify-center absolute right-0 top-1.5 hover:bg-blue-300\"\n                        >\n                            <LiaGoogle size=\"20px\" color=\"white\" />\n                        </a>\n                    </div>\n                    <div>\n                        <AutoTextSize\n                            className=\"mt-1 leading-6 text-gray-200\"\n                            mode=\"multiline\"\n                            minFontSizePx=\"24\"\n                            maxFontSizePx=\"24\"\n                        >\n                            {card?.translation?.toLowerCase()}\n                        </AutoTextSize>\n                    </div>\n                </div>\n            </div>\n        </li>\n    );\n};\n\nexport default FlashCardExcerpt;\n","import Swal from 'sweetalert2';\nimport { toast } from 'react-toastify';\n\nimport { AiOutlineLoading3Quarters } from 'react-icons/ai';\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\nimport { HiOutlineTrash, HiOutlineSortDescending, HiOutlineSave } from 'react-icons/hi';\n\nimport { useClearFlashCardsMutation } from './flashCardsSlice';\nimport { useCreateFlashCardsColletionMutation } from '../flashCardsCollection/flashCardsCollectionSlice';\n\nconst FlashCardsListOptions = ({ flashCards, sortHandler, flashCardsLoading }) => {\n    // const [open, setOpen] = useState(false);\n\n    const [clearFlashCards, { isLoading: flashCardsCleaning }] = useClearFlashCardsMutation();\n    const [createFlashCardsCollection] = useCreateFlashCardsColletionMutation();\n\n    const clearFlashCardsFunction = async _ => {\n        const result = await Swal.fire({\n            icon: 'warning',\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            showCancelButton: true,\n            confirmButtonText: 'Yes, clear the collection!',\n            cancelButtonText: 'No, cancel!',\n        });\n\n        if (result.value) {\n            try {\n                await clearFlashCards().unwrap();\n            } catch (error) {\n                console.log(`Error when deleting flash cards: `, error);\n            }\n        }\n    };\n\n    const createCollectionFireBase = async _ => {\n        const { value: collectionName } = await Swal.fire({\n            title: 'How you want to name this collection?',\n            input: 'text',\n            inputAttributes: {\n                maxlength: '10',\n                autocapitalize: 'off',\n                autocorrect: 'off',\n                required: 'true',\n            },\n            showCancelButton: true,\n            inputValidator: value => {\n                if (!value) {\n                    return 'You need to write something!';\n                }\n            },\n        });\n        if (collectionName) {\n            try {\n                await createFlashCardsCollection({ flashCards, collectionName }).unwrap();\n                toast.success('New collection is added!');\n            } catch (error) {\n                console.log(`addCollectionFireBaseError: `, error);\n            }\n        }\n    };\n\n    return (\n        <div className=\"flex items-center ml-auto py-2\">\n            <p className=\"inline-flex items-center px-5 py-2.5 text-xl font-semibold text-center cursor-default\">\n                Total:\n                <span className=\"inline-flex items-center justify-center w-12 h-8 ms-2 text-l font-semibold text-blue-800 bg-blue-200 rounded-full\">\n                    {flashCardsLoading ? (\n                        <AiOutlineLoading3Quarters\n                            size=\"15px\"\n                            color=\"blue\"\n                            className=\"text-white animate-spin\"\n                        />\n                    ) : (\n                        flashCards?.length\n                    )}\n                </span>\n            </p>\n\n            <div className=\"ml-auto flex items-center justify-center bg-blue-600 rounded-md\">\n                {/* <div\n                    className={`flex items-center transition-transform ${\n                        open ? 'translate-x-0' : 'translate-x-full hidden'\n                    }`}\n                >\n                    <div className=\"flex items-center p-2 py-2 rounded-md hover:bg-blue-700\">\n                        <input\n                            id=\"checkbox-1\"\n                            type=\"checkbox\"\n                            value=\"translation\"\n                            className=\"w-4 h-4 cursor-pointer\"\n                        />\n                        <label\n                            htmlFor=\"checkbox-1\"\n                            className=\"ms-1 text-m text-white font-semibold cursor-pointer\"\n                        >\n                            translation\n                        </label>\n                    </div>\n\n                    <div className=\"flex items-center p-2 py-2 rounded-md hover:bg-blue-700\">\n                        <input\n                            id=\"checkbox-2\"\n                            type=\"checkbox\"\n                            value=\"description\"\n                            className=\"w-4 h-4 cursor-pointer\"\n                        />\n                        <label\n                            htmlFor=\"checkbox-2\"\n                            className=\"ms-1 text-m text-white font-semibold cursor-pointer\"\n                        >\n                            description\n                        </label>\n                    </div>\n\n                    <div className=\"flex items-center p-2 py-2 rounded-md hover:bg-blue-700\">\n                        <input\n                            id=\"checkbox-3\"\n                            type=\"checkbox\"\n                            value=\"example\"\n                            className=\"w-4 h-4 cursor-pointer\"\n                        />\n                        <label\n                            htmlFor=\"checkbox-3\"\n                            className=\"ms-1 text-m text-white font-semibold cursor-pointer\"\n                        >\n                            example\n                        </label>\n                    </div>\n                </div>\n                <button\n                    className=\"px-1 py-3 cursor-pointer rounded-md hover:bg-blue-700\"\n                    onClick={() => setOpen(!open)}\n                >\n                    {open ? (\n                        <IoIosArrowForward size=\"20px\" color=\"white\" />\n                    ) : (\n                        <IoIosArrowBack size=\"20px\" color=\"white\" />\n                    )}\n                </button> */}\n                <div className=\"group relative\">\n                    <button\n                        type=\"button\"\n                        disabled={flashCards?.length === 0}\n                        onClick={createCollectionFireBase}\n                        title=\"Save collection.\"\n                        className=\"items-center justify-center p-3 bg-blue-600 hover:bg-blue-700 text-white text-xl font-medium rounded-l-md disabled:bg-gray-300 disabled:cursor-not-allowed\"\n                    >\n                        <HiOutlineSave size=\"20px\" />\n                    </button>\n                    <div className=\"p-1 bg-gray-500 rounded mt-1 invisible group-hover:visible absolute z-10\">\n                        <p className=\"text-white text-center text-xs\">Save collection.</p>\n                    </div>\n                </div>\n\n                <div className=\"group relative\">\n                    <button\n                        type=\"button\"\n                        disabled={flashCards?.length === 0}\n                        onClick={() => sortHandler(prev => !prev)}\n                        title=\"Sort collection from A-Z.\"\n                        className=\"items-center justify-center p-3 bg-blue-600 hover:bg-blue-700 text-white text-xl font-medium disabled:bg-gray-300  disabled:cursor-not-allowed\"\n                    >\n                        <HiOutlineSortDescending size=\"20px\" />\n                    </button>\n                    <div className=\"p-1 bg-gray-500 rounded mt-1 invisible group-hover:visible absolute z-10\">\n                        <p className=\"text-white text-center text-xs\">Sort collection.</p>\n                    </div>\n                </div>\n                <div className=\"group relative\">\n                    {!flashCardsCleaning ? (\n                        <button\n                            type=\"button\"\n                            disabled={flashCards?.length === 0}\n                            onClick={clearFlashCardsFunction}\n                            title=\"Clear collection.\"\n                            className=\"items-center justify-center p-3 bg-blue-600 hover:bg-blue-700 text-white text-xl font-medium rounded-r-md disabled:bg-gray-300  disabled:cursor-not-allowed\"\n                        >\n                            <HiOutlineTrash size=\"20px\" />\n                        </button>\n                    ) : (\n                        <button\n                            disabled\n                            type=\"button\"\n                            className=\"items-center justify-center p-3 bg-blue-600 text-white rounded-r-md  disabled:cursor-not-allowed\"\n                        >\n                            <AiOutlineLoading3Quarters\n                                size=\"20px\"\n                                className=\"text-white animate-spin\"\n                            />\n                        </button>\n                    )}\n                    <div className=\"p-1 bg-gray-500 rounded mt-1 invisible group-hover:visible absolute z-10\">\n                        <p className=\"text-white text-center text-xs\">Clear collection.</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FlashCardsListOptions;\n","import { useMemo, useRef, useState } from 'react';\n\nimport { useGetFlashCardsQuery } from './flashCardsSlice';\n\nimport FlashCardExcerpt from './FlashCardExcerpt';\nimport FlashCardsListOptions from './FlashCardsListOptions';\nimport FlashCardsPrint from './FlashCardsPrint';\n\nconst FlashCardsList = () => {\n    const [sort, setSort] = useState(false);\n    const {\n        data: flashCards,\n        isLoading: flashCardsLoading,\n        isSuccess,\n        isError,\n        error,\n    } = useGetFlashCardsQuery();\n\n    const componentRef = useRef();\n\n    const sortHandler = value => {\n        setSort(value);\n    };\n\n    const sortedFlashCards = useMemo(() => {\n        const copy = flashCards?.slice();\n        const sorted = sort ? copy.sort((a, b) => a.word.localeCompare(b.word)) : flashCards;\n        return sorted;\n    }, [flashCards, sort]);\n\n    let content;\n    if (isSuccess) {\n        content = sortedFlashCards?.map(card => <FlashCardExcerpt key={card.id} card={card} />);\n    } else if (isError) {\n        content = <p>{error}</p>;\n    }\n\n    return (\n        <>\n            <FlashCardsListOptions\n                flashCards={sortedFlashCards}\n                sortHandler={sortHandler}\n                flashCardsLoading={flashCardsLoading}\n            />\n            <div ref={componentRef}>\n                {sortedFlashCards?.length === 0 ? (\n                    <h1 className=\"p-5 text-4xl font-extrabold text-center text-transparent bg-clip-text bg-gradient-to-r from-blue-200 to-purple-800\">\n                        You haven't added any words yet\n                    </h1>\n                ) : (\n                    <ul\n                        className={`grid xl:grid-cols-4 md:grid-cols-4 sm:grid-cols-3 grid-cols-2 gap-4 place-items-center`}\n                    >\n                        {content}\n                    </ul>\n                )}\n            </div>\n            <FlashCardsPrint flashCardsData={sortedFlashCards} componentRef={componentRef} />\n        </>\n    );\n};\n\nexport default FlashCardsList;\n","import { useEffect, useState } from 'react';\n\nimport { HiOutlineSearch } from 'react-icons/hi';\nimport { AiOutlineLoading3Quarters } from 'react-icons/ai';\nimport { useAddFlashCardMutation } from './flashCardsSlice';\n\nconst languageOptions = [\n    { language: 'uk', icon: '🇺🇦', fullName: 'Ukrainian' },\n    { language: 'en', icon: '🇬🇧', fullName: 'English' },\n    { language: 'ru', icon: '🪆', fullName: 'hru-hru' },\n    { language: 'ko', icon: '🇰🇷', fullName: 'Korean' },\n    { language: 'es', icon: '🇪🇸', fullName: 'Spanish' },\n];\n\nconst FlashCardAddForm = () => {\n    const [searchWord, setSearchWord] = useState('');\n    const [open, setOpen] = useState(false);\n    const [languageTranslation, setLanguageTranslation] = useState(\n        JSON.parse(localStorage.getItem('languageTranslation')) || {\n            language: 'uk',\n            icon: '🇺🇦',\n            fullName: 'Ukrainian',\n        }\n    );\n\n    useEffect(() => {\n        localStorage.setItem('languageTranslation', JSON.stringify(languageTranslation));\n    }, [languageTranslation]);\n\n    const [addCard, { isLoading }] = useAddFlashCardMutation();\n\n    const handleInputChange = e => {\n        setSearchWord(e.target.value);\n    };\n\n    const handleSubmitButton = async e => {\n        e.preventDefault();\n        const trimmedWord = searchWord.trim();\n\n        try {\n            addCard({\n                trimmedWord,\n                language: languageTranslation.language,\n                languageFullName: languageTranslation.fullName,\n            }).unwrap();\n            setSearchWord('');\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    return (\n        <div className=\"flex justify-between py-3\">\n            <div className=\"relative w-32 rounded\">\n                <div\n                    onClick={() => setOpen(!open)}\n                    className=\"flex items-center justify-center px-5 text-6xl rounded-md cursor-pointer hover:bg-blue-600 hover:text-white\"\n                >\n                    {languageTranslation.icon}\n                </div>\n\n                {open && (\n                    <ul className=\"absolute z-50 bg-white\">\n                        {languageOptions\n                            .filter(item => item.language !== languageTranslation.language)\n                            .map(item => (\n                                <li\n                                    key={item.language}\n                                    className=\"flex items-center justify-center text-6xl rounded-md cursor-pointer px-7 hover:bg-blue-600 hover:text-white\"\n                                    onClick={() => {\n                                        if (item.language !== languageTranslation.language) {\n                                            setLanguageTranslation(item);\n                                        }\n                                        setOpen(false);\n                                    }}\n                                >\n                                    {item.icon}\n                                </li>\n                            ))}\n                    </ul>\n                )}\n            </div>\n            <form className=\"w-full\">\n                <label\n                    htmlFor=\"default-search\"\n                    className=\"mb-2 text-sm font-medium text-gray-900 sr-only\"\n                >\n                    Search\n                </label>\n                <div className=\"relative\">\n                    <div className=\"absolute inset-y-0 flex items-center pointer-events-none start-0 ps-3\">\n                        <HiOutlineSearch size=\"20px\" />\n                    </div>\n                    <input\n                        autoFocus\n                        autoComplete=\"off\"\n                        value={searchWord}\n                        disabled={isLoading}\n                        onChange={handleInputChange}\n                        type=\"search\"\n                        id=\"default-search\"\n                        className=\"block w-full p-4 text-xl text-gray-900 ps-10 focus:outline-none disabled:bg-inherit\"\n                        placeholder={`Translate into ${languageTranslation.fullName}`}\n                        required\n                    />\n\n                    {!isLoading ? (\n                        <button\n                            disabled={!searchWord}\n                            onClick={handleSubmitButton}\n                            className=\"text-white absolute end-0 bottom-2.5 bg-blue-700 hover:bg-blue-800 disabled:bg-gray-300 disabled:cursor-not-allowed focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-2xl w-[132px] h-[44px]\"\n                        >\n                            Add\n                        </button>\n                    ) : (\n                        <button\n                            disabled\n                            type=\"button\"\n                            className=\"text-white absolute end-0 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 text-center inline-flex items-center w-[132px] h-[44px]\"\n                        >\n                            <AiOutlineLoading3Quarters className=\"inline w-4 h-4 text-white me-3 animate-spin\" />\n                            Loading...\n                        </button>\n                    )}\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default FlashCardAddForm;\n","import React from 'react';\nimport FlashCardsList from './FlashCardsList';\nimport FlashCardAddForm from './FlashCardAddForm';\n\nconst FlashCards = () => {\n    return (\n        <>\n            <FlashCardAddForm />\n            <FlashCardsList />\n        </>\n    );\n};\n\nexport default FlashCards;\n","import { BiSave } from 'react-icons/bi';\nimport ReactToPrint from 'react-to-print';\n\nconst FlashCardsPrint = ({ flashCardsData, componentRef }) => {\n    return (\n        <ReactToPrint\n            trigger={() =>\n                flashCardsData?.length !== 0 && flashCardsData !== undefined ? (\n                    <div className=\"sticky flex items-center justify-center w-40 mx-auto mt-10 bottom-5\">\n                        <button className=\"flex px-4 py-2 text-sm font-medium text-gray-800 bg-gray-200 rounded-md hover:bg-gray-300\">\n                            <BiSave size=\"20px\" className=\"mr-2\" />\n                            <p className=\"font-semibold\">Save as PDF</p>\n                        </button>\n                    </div>\n                ) : (\n                    <></>\n                )\n            }\n            content={() => componentRef.current}\n        />\n    );\n};\n\nexport default FlashCardsPrint;\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst translateText = async (text, toLanguage = 'en') => {\n    const translationOptions = {\n        method: 'POST',\n        url: 'https://microsoft-translator-text.p.rapidapi.com/translate',\n        params: {\n            'to[0]': toLanguage,\n            'api-version': '3.0',\n        },\n        headers: {\n            'X-RapidAPI-Key': process.env.REACT_APP_RAPID_API_KEY,\n        },\n        data: [\n            {\n                Text: text,\n            },\n        ],\n    };\n\n    try {\n        const response = await axios(translationOptions);\n\n        return response?.data[0]?.translations[0]?.text.toLowerCase();\n    } catch (error) {\n        console.error('translateText', error);\n        return null;\n    }\n};\n\nconst getDetails = async text => {\n    let detailedData = {\n        phonetic: '',\n        audio: '',\n        partOfSpeech: '',\n        definition: '',\n    };\n\n    const validate = /\\s/g.test(text);\n\n    if (validate) {\n        return detailedData;\n    }\n\n    try {\n        const response = await axios(`https://api.dictionaryapi.dev/api/v2/entries/en/${text}`);\n\n        detailedData = {\n            phonetic:\n                response?.data.find(item => item.phonetic !== undefined)?.phonetic ?? `/${text}/`,\n            audio: response?.data[0].phonetics.find(item => item.audio !== '')?.audio ?? '',\n            partOfSpeech: response?.data[0].meanings[0]?.partOfSpeech ?? '',\n            definition: response?.data[0].meanings[0]?.definitions[0].definition ?? '',\n        };\n\n        return detailedData;\n    } catch (error) {\n        console.log('getDetails', error);\n        return detailedData;\n    }\n};\n\nconst fetchUnsplashPhoto = async searchQuery => {\n    try {\n        const response = await axios(\n            `${process.env.REACT_APP_UNSPLASH_BASE_URL}/search/photos?page=1&per_page=1&orientation=landscape&query=${searchQuery}&client_id=${process.env.REACT_APP_UNSPLASH_KEY_ID}`\n        );\n        return response?.data?.results[0]?.urls?.regular || 'https://i.ibb.co/2NVKDq2/1.png';\n    } catch (error) {\n        console.error('fetchUnsplashPhoto', error);\n        return 'https://i.ibb.co/2NVKDq2/1.png';\n    }\n};\n\nexport const fetchMultipleData = async (searchQuery, translateTo) => {\n    try {\n        const translation = await translateText(searchQuery, translateTo);\n\n        if (translation === searchQuery) {\n            toast.info(\n                'There is something wrong  in your text, it may be a typo or native and target languages are the same! 🏳'\n            );\n\n            return null;\n        }\n\n        const getPictureInEng = await translateText(searchQuery);\n        const unsplashPhoto = await fetchUnsplashPhoto(getPictureInEng);\n        const { phonetic, audio, partOfSpeech, definition } = await getDetails(getPictureInEng);\n\n        const response = {\n            word: searchQuery,\n            translation,\n            phonetic,\n            audio,\n            partOfSpeech,\n            definition,\n            picture: unsplashPhoto,\n        };\n\n        return response;\n    } catch (error) {\n        console.error('fetchMultipleData', error);\n    }\n};\n","import { apiSlice } from '../api/apiSlice';\nimport { collection, deleteDoc, doc, getDoc, getDocs, setDoc, updateDoc } from 'firebase/firestore';\nimport { fetchMultipleData } from '../../utils/fetchMultipleData';\n\nimport { dataBase } from '../../Firebase/firebaseConfig';\n\nexport const extendedApiSlice = apiSlice.injectEndpoints({\n    endpoints: builder => ({\n        getFlashCards: builder.query({\n            queryFn: async () => {\n                try {\n                    const querySnapshot = await getDocs(collection(dataBase, 'flashCards'));\n                    const data = querySnapshot.docs.map(doc => ({\n                        id: doc.id,\n                        ...doc.data(),\n                    }));\n                    return { data };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            providesTags: ['FlashCards'],\n        }),\n\n        getSingleFlashCard: builder.query({\n            queryFn: async flashCardId => {\n                try {\n                    const docRef = doc(dataBase, 'flashCards', flashCardId);\n                    const snapshot = await getDoc(docRef);\n                    return { data: snapshot.data() };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            providesTags: ['FlashCards'],\n        }),\n\n        clearFlashCards: builder.mutation({\n            queryFn: async () => {\n                try {\n                    const docs = await getDocs(collection(dataBase, 'flashCards'));\n                    const deletePromises = docs.docs.map(doc => deleteDoc(doc.ref));\n\n                    await Promise.all(deletePromises);\n\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCards'],\n        }),\n\n        addFlashCard: builder.mutation({\n            queryFn: async ({ trimmedWord, language }) => {\n                try {\n                    const result = await fetchMultipleData(trimmedWord, language);\n\n                    if (!result) {\n                        return { data: 'ok' };\n                    }\n\n                    const docRef = doc(collection(dataBase, 'flashCards'), Date.now().toString());\n                    await setDoc(docRef, {\n                        ...result,\n                    });\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCards'],\n        }),\n\n        deleteFlashCard: builder.mutation({\n            queryFn: async id => {\n                try {\n                    await deleteDoc(doc(dataBase, 'flashCards', id));\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCards'],\n        }),\n\n        updateFlashCard: builder.mutation({\n            queryFn: async ({ flashCardId, newData }) => {\n                try {\n                    await updateDoc(doc(dataBase, 'flashCards', flashCardId), {\n                        ...newData,\n                    });\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCards'],\n        }),\n    }),\n});\n\nexport const {\n    useGetFlashCardsQuery,\n    useGetSingleFlashCardQuery,\n    useClearFlashCardsMutation,\n    useAddFlashCardMutation,\n    useDeleteFlashCardMutation,\n    useUpdateFlashCardMutation,\n} = extendedApiSlice;\n","import { apiSlice } from '../api/apiSlice';\nimport { dataBase } from '../../Firebase/firebaseConfig';\nimport { collection, deleteDoc, doc, getDocs, setDoc } from 'firebase/firestore';\n\nexport const extendedApiSlice = apiSlice.injectEndpoints({\n    endpoints: builder => ({\n        getFlashCardsCollection: builder.query({\n            queryFn: async () => {\n                try {\n                    const querySnapshot = await getDocs(\n                        collection(dataBase, 'flashCardsCollection')\n                    );\n                    const data = querySnapshot.docs.map(doc => ({\n                        id: doc.id,\n                        ...doc.data(),\n                    }));\n                    return { data };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            providesTags: ['FlashCardCollection'],\n        }),\n        createFlashCardsColletion: builder.mutation({\n            queryFn: async ({ flashCards, collectionName }) => {\n                try {\n                    const docRef = await doc(\n                        collection(dataBase, 'flashCardsCollection'),\n                        Date.now().toString()\n                    );\n                    setDoc(docRef, { ...flashCards, collectionName });\n                    console.log('Collection written with ID: ', docRef.id);\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCardCollection'],\n        }),\n        deleteFlashCardsColletion: builder.mutation({\n            queryFn: async id => {\n                try {\n                    const dataDoc = doc(dataBase, 'flashCardsCollection', id);\n                    await deleteDoc(dataDoc);\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCardCollection'],\n        }),\n        printFlashCardsCollection: builder.mutation({\n            async queryFn({ data, index }) {\n                try {\n                    const newCollectionData = Object.values(data[index]);\n\n                    for (const flashCard of newCollectionData) {\n                        if (typeof flashCard === 'string') continue;\n\n                        const { id, ...newFlashCard } = flashCard;\n\n                        const docRef = doc(\n                            collection(dataBase, 'flashCards'),\n                            Date.now().toString()\n                        );\n\n                        await setDoc(docRef, newFlashCard);\n                    }\n\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCards'],\n        }),\n    }),\n});\n\nexport const {\n    useGetFlashCardsCollectionQuery,\n    useCreateFlashCardsColletionMutation,\n    useDeleteFlashCardsColletionMutation,\n    usePrintFlashCardsCollectionMutation,\n} = extendedApiSlice;\n","export const toastInitialSettings = {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: false,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n};\n","import { toast } from 'react-toastify';\nimport { toastInitialSettings } from './utils';\n\nexport const copyTextToClipboard = async text => {\n    toast.success('The word is copied!', toastInitialSettings);\n    if ('clipboard' in navigator) {\n        return await navigator.clipboard.writeText(text);\n    } else {\n        return document.execCommand('copy', true, text);\n    }\n};\n"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","dataBase","getFirestore","getStorage","_ref","_card$translation","card","deleteFlashCard","isLoading","isSuccess","useDeleteFlashCardMutation","_jsxs","className","children","_jsx","Rings","visible","height","width","color","ariaLabel","concat","loading","src","picture","alt","word","type","onClick","async","id","unwrap","error","console","log","deleteFlashCardHandler","AiOutlineDelete","Link","to","AiOutlineEdit","copyTextToClipboard","AutoTextSize","title","mode","minFontSizePx","maxFontSizePx","rel","target","href","LuBookMarked","size","LiaGoogle","translation","toLowerCase","flashCards","sortHandler","flashCardsLoading","clearFlashCards","flashCardsCleaning","useClearFlashCardsMutation","createFlashCardsCollection","useCreateFlashCardsColletionMutation","AiOutlineLoading3Quarters","length","disabled","value","collectionName","Swal","input","inputAttributes","maxlength","autocapitalize","autocorrect","required","showCancelButton","inputValidator","toast","success","HiOutlineSave","prev","HiOutlineSortDescending","icon","text","confirmButtonText","cancelButtonText","HiOutlineTrash","FlashCardsList","sort","setSort","useState","data","isError","useGetFlashCardsQuery","componentRef","useRef","sortedFlashCards","useMemo","copy","slice","a","b","localeCompare","content","map","FlashCardExcerpt","_Fragment","FlashCardsListOptions","ref","FlashCardsPrint","flashCardsData","languageOptions","language","fullName","FlashCardAddForm","searchWord","setSearchWord","open","setOpen","languageTranslation","setLanguageTranslation","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","addCard","useAddFlashCardMutation","filter","item","htmlFor","HiOutlineSearch","autoFocus","autoComplete","onChange","e","placeholder","preventDefault","trimmedWord","trim","languageFullName","FlashCards","ReactToPrint","trigger","undefined","BiSave","current","translateText","translationOptions","method","url","params","arguments","headers","Text","_response$data$","_response$data$$trans","response","axios","translations","fetchMultipleData","searchQuery","translateTo","info","getPictureInEng","unsplashPhoto","_response$data","_response$data$result","_response$data$result2","results","urls","regular","fetchUnsplashPhoto","phonetic","audio","partOfSpeech","definition","detailedData","test","_response$data$find$p","_response$data$find","_response$data$0$phon","_response$data$0$phon2","_response$data$0$mean","_response$data$0$mean2","_response$data$0$mean3","_response$data$0$mean4","find","phonetics","meanings","definitions","getDetails","extendedApiSlice","apiSlice","injectEndpoints","endpoints","builder","getFlashCards","query","queryFn","querySnapshot","getDocs","collection","docs","doc","providesTags","getSingleFlashCard","docRef","flashCardId","getDoc","mutation","deletePromises","deleteDoc","Promise","all","invalidatesTags","addFlashCard","result","Date","now","toString","setDoc","updateFlashCard","newData","_ref2","updateDoc","useGetSingleFlashCardQuery","useUpdateFlashCardMutation","getFlashCardsCollection","createFlashCardsColletion","deleteFlashCardsColletion","dataDoc","printFlashCardsCollection","index","newCollectionData","Object","values","flashCard","newFlashCard","useGetFlashCardsCollectionQuery","useDeleteFlashCardsColletionMutation","usePrintFlashCardsCollectionMutation","toastInitialSettings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","theme","navigator","clipboard","writeText","document","execCommand"],"sourceRoot":""}