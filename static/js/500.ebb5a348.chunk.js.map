{"version":3,"file":"static/js/500.ebb5a348.chunk.js","mappings":"qJAKA,MAUMA,GAAMC,EAAAA,EAAAA,IAVW,CACnBC,OAAQC,0CACRC,WAAYD,iCACZE,UAAWF,iBACXG,cAAeH,6BACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAKNO,GAAWC,EAAAA,EAAAA,IAAaX,IACdY,EAAAA,EAAAA,IAAWZ,E,uHCNlC,MA+DA,EA/DmCa,IAAyD,IAAxD,MAAEC,EAAK,iBAAEC,EAAgB,sBAAEC,GAAuBH,EAClF,MAAMI,GAAWC,EAAAA,EAAAA,OAEVC,IAA0BC,EAAAA,EAAAA,OAC1BC,GAAmBC,UAAWC,KACjCC,EAAAA,EAAAA,MAoCJ,OATAC,EAAAA,EAAAA,YAAU,KACFF,GAAkCN,EAAS,cAAc,GAC9D,CAACM,EAAkCN,KAQlCS,EAAAA,EAAAA,MAAA,MAEIC,QApBuBC,EAACC,EAAMf,IAAUgB,UAC5C,UACUT,EAAgB,CAAEQ,OAAMf,UAASiB,QAC3C,CAAE,MAAOC,GACLC,QAAQC,IAAI,uCAAwCF,EACxD,GAeaJ,CAAuBZ,EAAuBF,GACvDqB,UAAU,4GAA2GC,SAAA,EAErHC,EAAAA,EAAAA,KAAA,UACIC,KAAK,SACLX,QAASY,IA1CWT,OAAOS,EAAGC,KACtCD,EAAEE,yBAEmBC,IAAAA,KAAU,CAC3BC,KAAM,UACNC,MAAO,gBACPC,KAAK,cAADC,OAAgB/B,EAAiBgC,eAAc,kBACnDC,kBAAkB,EAClBC,kBAAkB,eAClBC,iBAAkB,iBAGXC,OACPhC,EAAuBqB,EAC3B,EA6BYY,CAAwBb,EAAGxB,EAAiByB,GAAG,EAEnDL,UAAU,mGAAkGC,UAE5GC,EAAAA,EAAAA,KAACgB,EAAAA,IAAe,CAACC,KAAK,YAE1BjB,EAAAA,EAAAA,KAAA,KAAGF,UAAU,iDAAgDC,SACxDrB,EAAiBgC,mBAdjBjC,EAgBJ,EC5Bb,EAxCiCyC,KAC7B,MACI1B,KAAMb,EACNwC,UAAWC,EACXnC,UAAWoC,EAAkC,QAC7CC,EAAO,MACP3B,IACA4B,EAAAA,EAAAA,MAEJ,IAAIC,EAcJ,OAbIH,EACAG,EAA+B,OAArB7C,QAAqB,IAArBA,OAAqB,EAArBA,EAAuB8C,KAAI,CAAC/C,EAAkBD,KACpDuB,EAAAA,EAAAA,KAAC0B,EAA0B,CAEvBjD,MAAOA,EACPE,sBAAuBA,EACvBD,iBAAkBA,GAHbA,EAAiByB,MAMvBmB,IACPE,GAAUxB,EAAAA,EAAAA,KAAA,KAAAD,SAAIJ,MAIdK,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,SACc,KAAb,OAArBpB,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBgD,SACpB3B,EAAAA,EAAAA,KAAA,MAAIF,UAAU,6FAA4FC,SACrGyB,KAGLxB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iDAAgDC,UAC3DC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,qHAAoHC,SAAC,gCAKzI,C,gGCnCP,MAAM6B,EAAmBC,EAAAA,EAASC,gBAAgB,CACrDC,UAAWC,IAAO,CACdC,wBAAyBD,EAAQE,MAAM,CACnCC,QAAS1C,UACL,IACI,MAAM2C,QAAsBC,EAAAA,EAAAA,KACxBC,EAAAA,EAAAA,IAAWjE,EAAAA,EAAU,yBAMzB,MAAO,CAAEmB,KAJI4C,EAAcG,KAAKd,KAAIe,IAAG,CACnCrC,GAAIqC,EAAIrC,MACLqC,EAAIhD,WAGf,CAAE,MAAOG,GACL,MAAO,CAAEA,QACb,GAEJ8C,aAAc,CAAC,yBAEnBC,0BAA2BV,EAAQW,SAAS,CACxCR,QAAS1C,UAA2C,IAApC,WAAEmD,EAAU,eAAElC,GAAgBlC,EAC1C,IACI,MAAMqE,QAAeL,EAAAA,EAAAA,KACjBF,EAAAA,EAAAA,IAAWjE,EAAAA,EAAU,wBACrByE,KAAKC,MAAMC,YAIf,OAFAC,EAAAA,EAAAA,IAAOJ,EAAQ,IAAKD,EAAYlC,mBAChCd,QAAQC,IAAI,+BAAgCgD,EAAO1C,IAC5C,CAAEX,KAAM,KACnB,CAAE,MAAOG,GACL,MAAO,CAAEA,QACb,GAEJuD,gBAAiB,CAAC,yBAEtBC,0BAA2BnB,EAAQW,SAAS,CACxCR,QAAS1C,UACL,IACI,MAAM2D,GAAUZ,EAAAA,EAAAA,IAAInE,EAAAA,EAAU,uBAAwB8B,GAEtD,aADMkD,EAAAA,EAAAA,IAAUD,GACT,CAAE5D,KAAM,KACnB,CAAE,MAAOG,GACL,MAAO,CAAEA,QACb,GAEJuD,gBAAiB,CAAC,yBAEtBI,0BAA2BtB,EAAQW,SAAS,CACxC,aAAMR,CAAOoB,GAAmB,IAAlB,KAAE/D,EAAI,MAAEf,GAAO8E,EACzB,IACI,MAAMC,EAAoBC,OAAOC,OAAOlE,EAAKf,IAE7C,IAAK,MAAMkF,KAAaH,EAAmB,CACvC,GAAyB,kBAAdG,EAAwB,SAEnC,MAAM,GAAExD,KAAOyD,GAAiBD,EAE1Bd,GAASL,EAAAA,EAAAA,KACXF,EAAAA,EAAAA,IAAWjE,EAAAA,EAAU,cACrByE,KAAKC,MAAMC,kBAGTC,EAAAA,EAAAA,IAAOJ,EAAQe,EACzB,CAEA,MAAO,CAAEpE,KAAM,KACnB,CAAE,MAAOG,GACL,MAAO,CAAEA,QACb,CACJ,EACAuD,gBAAiB,CAAC,qBAKjB,gCACT3B,EAA+B,qCAC/BsC,EAAoC,qCACpC9E,EAAoC,qCACpCI,GACAyC,C","sources":["Firebase/firebaseConfig.js","features/flashCardsCollection/FlashCardCollectionExcerpt.jsx","features/flashCardsCollection/FlashCardsCollectionList.jsx","features/flashCardsCollection/flashCardsCollectionSlice.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from 'firebase/app';\nimport { getFirestore } from 'firebase/firestore';\nimport { getStorage } from 'firebase/storage';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\n\nexport const dataBase = getFirestore(app);\nexport const storage = getStorage(app);\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport {\n    useDeleteFlashCardsColletionMutation,\n    usePrintFlashCardsCollectionMutation,\n} from './flashCardsCollectionSlice';\n\nimport Swal from 'sweetalert2';\n\nimport { AiOutlineDelete } from 'react-icons/ai';\n\nconst FlashCardCollectionExcerpt = ({ index, singleCollection, flashCardsCollections }) => {\n    const navigate = useNavigate();\n\n    const [deleteSingleCollection] = useDeleteFlashCardsColletionMutation();\n    const [printCollection, { isSuccess: printFlashCardsCollectionSuccess }] =\n        usePrintFlashCardsCollectionMutation();\n\n    const deleteCollectionHandler = async (e, id) => {\n        e.stopPropagation();\n\n        const result = await Swal.fire({\n            icon: 'warning',\n            title: 'Are you sure?',\n            text: `You delete ${singleCollection.collectionName}'s collection!`,\n            showCancelButton: true,\n            confirmButtonText: `Yes, delete!`,\n            cancelButtonText: 'No, cancel!',\n        });\n\n        if (result.value) {\n            deleteSingleCollection(id);\n        }\n    };\n\n    const printCollectionHandler = (data, index) => async () => {\n        try {\n            await printCollection({ data, index }).unwrap();\n        } catch (error) {\n            console.log(`Error with printing the collection: `, error);\n        }\n    };\n\n    useEffect(() => {\n        if (printFlashCardsCollectionSuccess) navigate('/flashCards');\n    }, [printFlashCardsCollectionSuccess, navigate]);\n\n    // ! for later need to create a grid of 9 pics in a div\n    // const pictureArray = Object.values(singleCollection)\n    //     .filter(item => item.picture)\n    //     .map(item => item.picture);\n\n    return (\n        <li\n            key={index}\n            onClick={printCollectionHandler(flashCardsCollections, index)}\n            className=\"relative flex justify-center items-center rounded-xl h-28 w-28 bg-blue-700 cursor-pointer overflow-hidden\"\n        >\n            <button\n                type=\"button\"\n                onClick={e => {\n                    deleteCollectionHandler(e, singleCollection.id);\n                }}\n                className=\"h-8 w-20 bg-white hover:bg-blue-300 absolute top-1 rounded-full flex items-center justify-center\"\n            >\n                <AiOutlineDelete size=\"20px\" />\n            </button>\n            <p className=\"text-center text-white text-xl font-black mt-6\">\n                {singleCollection.collectionName}\n            </p>\n        </li>\n    );\n};\n\nexport default FlashCardCollectionExcerpt;\n","import { useGetFlashCardsCollectionQuery } from './flashCardsCollectionSlice';\nimport FlashCardCollectionExcerpt from './FlashCardCollectionExcerpt';\n\nconst FlashCardsCollectionList = () => {\n    const {\n        data: flashCardsCollections,\n        isLoading: flashCardsCollectionLoading,\n        isSuccess: flashCardsCollectionLoadingSuccess,\n        isError,\n        error,\n    } = useGetFlashCardsCollectionQuery();\n\n    let content;\n    if (flashCardsCollectionLoadingSuccess) {\n        content = flashCardsCollections?.map((singleCollection, index) => (\n            <FlashCardCollectionExcerpt\n                key={singleCollection.id}\n                index={index}\n                flashCardsCollections={flashCardsCollections}\n                singleCollection={singleCollection}\n            />\n        ));\n    } else if (isError) {\n        content = <p>{error}</p>;\n    }\n\n    return (\n        <div className=\"relative\">\n            {flashCardsCollections?.length !== 0 ? (\n                <ul className=\"grid xl:grid-cols-10 lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2 gap-4 place-items-center\">\n                    {content}\n                </ul>\n            ) : (\n                <div className=\"w-full h-full flex items-center justify-center\">\n                    <h1 className=\"p-5 text-center font-extrabold text-transparent text-4xl bg-clip-text bg-gradient-to-r from-purple-800 to-blue-200\">\n                        Collection list is empty\n                    </h1>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default FlashCardsCollectionList;\n","import { apiSlice } from '../api/apiSlice';\nimport { dataBase } from '../../Firebase/firebaseConfig';\nimport { collection, deleteDoc, doc, getDocs, setDoc } from 'firebase/firestore';\n\nexport const extendedApiSlice = apiSlice.injectEndpoints({\n    endpoints: builder => ({\n        getFlashCardsCollection: builder.query({\n            queryFn: async () => {\n                try {\n                    const querySnapshot = await getDocs(\n                        collection(dataBase, 'flashCardsCollection')\n                    );\n                    const data = querySnapshot.docs.map(doc => ({\n                        id: doc.id,\n                        ...doc.data(),\n                    }));\n                    return { data };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            providesTags: ['FlashCardCollection'],\n        }),\n        createFlashCardsColletion: builder.mutation({\n            queryFn: async ({ flashCards, collectionName }) => {\n                try {\n                    const docRef = await doc(\n                        collection(dataBase, 'flashCardsCollection'),\n                        Date.now().toString()\n                    );\n                    setDoc(docRef, { ...flashCards, collectionName });\n                    console.log('Collection written with ID: ', docRef.id);\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCardCollection'],\n        }),\n        deleteFlashCardsColletion: builder.mutation({\n            queryFn: async id => {\n                try {\n                    const dataDoc = doc(dataBase, 'flashCardsCollection', id);\n                    await deleteDoc(dataDoc);\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCardCollection'],\n        }),\n        printFlashCardsCollection: builder.mutation({\n            async queryFn({ data, index }) {\n                try {\n                    const newCollectionData = Object.values(data[index]);\n\n                    for (const flashCard of newCollectionData) {\n                        if (typeof flashCard === 'string') continue;\n\n                        const { id, ...newFlashCard } = flashCard;\n\n                        const docRef = doc(\n                            collection(dataBase, 'flashCards'),\n                            Date.now().toString()\n                        );\n\n                        await setDoc(docRef, newFlashCard);\n                    }\n\n                    return { data: 'ok' };\n                } catch (error) {\n                    return { error };\n                }\n            },\n            invalidatesTags: ['FlashCards'],\n        }),\n    }),\n});\n\nexport const {\n    useGetFlashCardsCollectionQuery,\n    useCreateFlashCardsColletionMutation,\n    useDeleteFlashCardsColletionMutation,\n    usePrintFlashCardsCollectionMutation,\n} = extendedApiSlice;\n"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","dataBase","getFirestore","getStorage","_ref","index","singleCollection","flashCardsCollections","navigate","useNavigate","deleteSingleCollection","useDeleteFlashCardsColletionMutation","printCollection","isSuccess","printFlashCardsCollectionSuccess","usePrintFlashCardsCollectionMutation","useEffect","_jsxs","onClick","printCollectionHandler","data","async","unwrap","error","console","log","className","children","_jsx","type","e","id","stopPropagation","Swal","icon","title","text","concat","collectionName","showCancelButton","confirmButtonText","cancelButtonText","value","deleteCollectionHandler","AiOutlineDelete","size","FlashCardsCollectionList","isLoading","flashCardsCollectionLoading","flashCardsCollectionLoadingSuccess","isError","useGetFlashCardsCollectionQuery","content","map","FlashCardCollectionExcerpt","length","extendedApiSlice","apiSlice","injectEndpoints","endpoints","builder","getFlashCardsCollection","query","queryFn","querySnapshot","getDocs","collection","docs","doc","providesTags","createFlashCardsColletion","mutation","flashCards","docRef","Date","now","toString","setDoc","invalidatesTags","deleteFlashCardsColletion","dataDoc","deleteDoc","printFlashCardsCollection","_ref2","newCollectionData","Object","values","flashCard","newFlashCard","useCreateFlashCardsColletionMutation"],"sourceRoot":""}